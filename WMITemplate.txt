// create WMI Class that maps a registry key
// DJ - 1.0 - 18.10.2016
//==================================================================
// 1. Register Registry property provider (shipped with WMI)
//==================================================================

#pragma namespace("\\\\.\\root\\cimv2")

// Registry instance provider
instance of __Win32Provider as $InstProv
{
	Name    ="RegProv" ;
	ClsID   = "{fe9af5c0-d3b6-11ce-a5b6-00aa00680c3f}" ;
	ImpersonationLevel = 1;
	PerUserInitialization = "False";
};

instance of __InstanceProviderRegistration
{
	Provider    = $InstProv;
	SupportsPut = True;
	SupportsGet = True;
	SupportsDelete = False;
	SupportsEnumeration = True;
};


// Registry property provider
instance of __Win32Provider as $PropProv
{
	Name    ="RegPropProv" ;
	ClsID   = "{72967901-68EC-11d0-B729-00AA0062CBB7}";
	ImpersonationLevel = 1;
	PerUserInitialization = "False";
};

instance of __PropertyProviderRegistration
{
	Provider     = $PropProv;
	SupportsPut  = True;
	SupportsGet  = True;
};


//==================================================================
// 2. <%= $Classname %>
//==================================================================

#pragma namespace ("\\\\.\\root\\cimv2")

// Class definition

#pragma deleteclass("<%=$Classname%>",nofail)
[DYNPROPS]
class <%= $classname %>
{
// unique identifier for the class
	[key]
	string InstanceKey;
// 3.
<% $properties | % { %>
   string <%= $_ %>;
<% } %>
};


// Instance definition

[DYNPROPS]
instance of <%= $Classname%>
{
	InstanceKey = "@";

<% $properties | % { %>
   [PropertyContext("local|<%=$keyexpanded%>|<%=$_%>"), Dynamic, Provider("RegPropProv")]
   <%= $_ %>;
<% } %>

};